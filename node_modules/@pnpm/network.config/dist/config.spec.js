"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("./config");
describe('pickSettingByUrl', () => {
    test('should return undefined if generic object is undefined', () => {
        expect((0, config_1.pickSettingByUrl)(undefined, 'https://example.com')).toBeUndefined();
    });
    test('should return the exact match from the generic object', () => {
        const settings = { 'https://example.com/': 'ExampleSetting' };
        expect((0, config_1.pickSettingByUrl)(settings, 'https://example.com')).toBe('ExampleSetting');
    });
    test('should return a match using nerf dart', () => {
        const settings = { '//example.com/': 'NerfDartSetting' };
        expect((0, config_1.pickSettingByUrl)(settings, 'https://example.com/path/to/resource')).toBe('NerfDartSetting');
    });
    test('should return a match using withoutPort', () => {
        const settings = {
            'https://example.com/path/to/resource/': 'WithoutPortSetting',
        };
        expect((0, config_1.pickSettingByUrl)(settings, 'https://example.com:8080/path/to/resource')).toBe('WithoutPortSetting');
    });
    test('should return undefined if no match is found', () => {
        const settings = { 'https://example.com/': 'ExampleSetting' };
        expect((0, config_1.pickSettingByUrl)(settings, 'https://nomatch.com')).toBeUndefined();
    });
    test('should recursively match using withoutPort', () => {
        const settings = { 'https://example.com/': 'RecursiveSetting' };
        expect((0, config_1.pickSettingByUrl)(settings, 'https://example.com:8080')).toBe('RecursiveSetting');
    });
});
//# sourceMappingURL=config.spec.js.map