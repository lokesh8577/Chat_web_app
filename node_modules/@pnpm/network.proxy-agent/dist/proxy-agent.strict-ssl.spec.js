"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_fetch_1 = __importDefault(require("node-fetch"));
const proxy_agent_1 = require("./proxy-agent");
const proxy_1 = __importDefault(require("proxy"));
describe('untrusted certificate', () => {
    let proxy;
    let proxyPort;
    beforeAll((done) => {
        // setup HTTP proxy server
        proxy = (0, proxy_1.default)();
        proxy.listen(() => {
            proxyPort = proxy.address().port;
            done();
        });
    });
    afterAll((done) => {
        proxy.once('close', done);
        proxy.close();
    });
    it('should not throw an error if strictSsl is set to false', async () => {
        const url = 'https://self-signed.badssl.com';
        const agent = (0, proxy_agent_1.getProxyAgent)(url, {
            httpsProxy: `http://127.0.0.1:${proxyPort}`,
            strictSsl: false,
        });
        await (0, node_fetch_1.default)(url, { agent });
    });
    it('should throw an error if strictSsl is not set', async () => {
        const url = 'https://self-signed.badssl.com';
        const agent = (0, proxy_agent_1.getProxyAgent)(url, {
            httpsProxy: `http://127.0.0.1:${proxyPort}`,
            strictSsl: true,
        });
        await expect((0, node_fetch_1.default)(url, { agent })).rejects.toThrow(/self[- ]signed certificate/);
    });
});
//# sourceMappingURL=proxy-agent.strict-ssl.spec.js.map